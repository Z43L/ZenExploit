#ifndef VECTOR_H
#define VECTOR_H

#include <stdint.h>
#include <stddef.h>


#define MAX_VECTORS 100 // Suponiendo que ya tienes esto para vectores
#define MAX_PAYLOADS 100

typedef enum {
    VULN_TYPE_UNKNOWN,
    VULN_TYPE_BUFFER_OVERFLOW,
    VULN_TYPE_STACK_OVERFLOW,
    VULN_TYPE_SQL_INJECTION,
    // ...
} VulnerabilityType;

typedef struct Vector {
    char* name;
    char* description;
    VulnerabilityType vulnerability_type;
    void (*exploit_function)(void* data);
    void* data;
} Vector;

typedef enum {
    PAYLOAD_TYPE_UNKNOWN,
    PAYLOAD_TYPE_SHELLCODE,
    PAYLOAD_TYPE_REVERSE_SHELL,
    // Añade más tipos según sea necesario
} PayloadType;

typedef struct Payload {
    char* name;
    PayloadType type;
    size_t size;
    void* data;
    char* filepath;  // Asegúrate de añadir este campo
} Payload;

Vector* register_vector(Vector* vector);
Vector* get_vector_by_name(const char* name);
void unregister_vector(Vector* vector);

Payload* create_payload(PayloadType type, size_t size);
void load_payloads_from_directory(const char* directory_path);
Payload* get_payload_by_name(const char* name);
void free_payload(Payload* payload);

void list_all_vectors(void);

#endif // VECTOR_H
